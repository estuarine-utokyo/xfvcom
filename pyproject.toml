# pyproject.toml  ── fully valid TOML 1.0

[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "xfvcom"
version = "0.2.0"
description = "Visualisation utilities for FVCOM outputs"
readme = "README.md"
requires-python = ">=3.12"
license = { text = "MIT" }

authors = [
  { name = "Jun Sasaki", email = "jsasaki.ece@gmail.com" }
]

classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent"
]

dependencies = [
  "numpy>=2.1.0",
  "xarray>=2024.6.0",
  "pandas>=2.2.0",
  "matplotlib>=3.9.0",
  "cartopy>=0.24.0",
  "pyproj>=3.6.0",
  "scipy>=1.11.0",
  "scikit-learn>=1.5.0",
  "imageio>=2.34.0",
  "moviepy>=1.0.3", 
  "imageio-ffmpeg>=0.6.0",
  "tqdm>=4.66.0",
  "jinja2>=3.1.4",
  "PyYAML>=6.0.1",
  "netCDF4>=1.6.5",
  "h5netcdf>=1.2.0",
  "cftime>=1.6.4",
  "chardet>=5.2.0", 
]

[project.optional-dependencies]
video = ["moviepy>=1.0.3", "imageio-ffmpeg>=0.6.0"]
dev = [
  "pytest>=8.3.0",
  "mypy>=1.10.0",
  "black>=24.8.0",
  "isort>=5.13.0",
  "types-tqdm>=4.66.0",
  "pandas-stubs>=2.2.0",
  "matplotlib>=3.9.0",
  "ruff>=0.5.0",
  "types-PyYAML>=6.0.12",
  "ipykernel>=6.29.0",
  "jupyterlab>=4.2.0",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["xfvcom*"]

[tool.black]
line-length = 88
target-version = ["py312"]

[tool.isort]
profile = "black"
skip_glob = ["**/.ipynb_checkpoints/*"]

[tool.mypy]
strict = true
strict_optional = true
explicit_package_bases = true
ignore_missing_imports = true
no_implicit_optional = true

[[tool.mypy.overrides]]
module = "yaml"
ignore_missing_imports = true

[project.scripts]
xfvcom-make-river-nml = "xfvcom.cli.make_river_nml:main"
xfvcom-make-river-nc = "xfvcom.cli.make_river_nc:main"
xfvcom-make-met-nc = "xfvcom.cli.make_met_nc:main"
xfvcom-make-groundwater-nc = "xfvcom.cli.make_groundwater_nc:main"
xfvcom-dye-ts = "xfvcom.cli.dye_timeseries:main"
